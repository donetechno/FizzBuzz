// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DoneTechno.FizzBuzz.Specs.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class FizzBuzzFeature : object, Xunit.IClassFixture<FizzBuzzFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "FizzBuzz.feature"
#line hidden
        
        public FizzBuzzFeature(FizzBuzzFeature.FixtureData fixtureData, DoneTechno_FizzBuzz_Specs_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "FizzBuzz", "\tWrite a program that prints the numbers from 1 to 100. \n\tBut for multiples of th" +
                    "ree print “Fizz” instead of the number and for the multiples of five print “Buzz" +
                    "”. \n\tFor numbers which are multiples of both three and five print “FizzBuzz”.", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public void TestInitialize()
        {
        }
        
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Print FizzBuzz")]
        [Xunit.TraitAttribute("FeatureTitle", "FizzBuzz")]
        [Xunit.TraitAttribute("Description", "Print FizzBuzz")]
        [Xunit.TraitAttribute("Category", "mytag")]
        [Xunit.InlineDataAttribute("001", "1", new string[0])]
        [Xunit.InlineDataAttribute("002", "2", new string[0])]
        [Xunit.InlineDataAttribute("003", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("004", "4", new string[0])]
        [Xunit.InlineDataAttribute("005", "Buzz", new string[0])]
        [Xunit.InlineDataAttribute("006", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("007", "7", new string[0])]
        [Xunit.InlineDataAttribute("008", "8", new string[0])]
        [Xunit.InlineDataAttribute("009", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("010", "Buzz", new string[0])]
        [Xunit.InlineDataAttribute("011", "11", new string[0])]
        [Xunit.InlineDataAttribute("012", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("013", "13", new string[0])]
        [Xunit.InlineDataAttribute("014", "14", new string[0])]
        [Xunit.InlineDataAttribute("015", "FizzBuzz", new string[0])]
        [Xunit.InlineDataAttribute("016", "16", new string[0])]
        [Xunit.InlineDataAttribute("017", "17", new string[0])]
        [Xunit.InlineDataAttribute("018", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("019", "19", new string[0])]
        [Xunit.InlineDataAttribute("020", "Buzz", new string[0])]
        [Xunit.InlineDataAttribute("021", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("022", "22", new string[0])]
        [Xunit.InlineDataAttribute("023", "23", new string[0])]
        [Xunit.InlineDataAttribute("024", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("025", "Buzz", new string[0])]
        [Xunit.InlineDataAttribute("026", "26", new string[0])]
        [Xunit.InlineDataAttribute("027", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("028", "28", new string[0])]
        [Xunit.InlineDataAttribute("029", "29", new string[0])]
        [Xunit.InlineDataAttribute("030", "FizzBuzz", new string[0])]
        [Xunit.InlineDataAttribute("031", "31", new string[0])]
        [Xunit.InlineDataAttribute("032", "32", new string[0])]
        [Xunit.InlineDataAttribute("033", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("034", "34", new string[0])]
        [Xunit.InlineDataAttribute("035", "Buzz", new string[0])]
        [Xunit.InlineDataAttribute("036", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("037", "37", new string[0])]
        [Xunit.InlineDataAttribute("038", "38", new string[0])]
        [Xunit.InlineDataAttribute("039", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("040", "Buzz", new string[0])]
        [Xunit.InlineDataAttribute("041", "41", new string[0])]
        [Xunit.InlineDataAttribute("042", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("043", "43", new string[0])]
        [Xunit.InlineDataAttribute("044", "44", new string[0])]
        [Xunit.InlineDataAttribute("045", "FizzBuzz", new string[0])]
        [Xunit.InlineDataAttribute("046", "46", new string[0])]
        [Xunit.InlineDataAttribute("047", "47", new string[0])]
        [Xunit.InlineDataAttribute("048", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("049", "49", new string[0])]
        [Xunit.InlineDataAttribute("050", "Buzz", new string[0])]
        [Xunit.InlineDataAttribute("051", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("052", "52", new string[0])]
        [Xunit.InlineDataAttribute("053", "53", new string[0])]
        [Xunit.InlineDataAttribute("054", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("055", "Buzz", new string[0])]
        [Xunit.InlineDataAttribute("056", "56", new string[0])]
        [Xunit.InlineDataAttribute("057", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("058", "58", new string[0])]
        [Xunit.InlineDataAttribute("059", "59", new string[0])]
        [Xunit.InlineDataAttribute("060", "FizzBuzz", new string[0])]
        [Xunit.InlineDataAttribute("061", "61", new string[0])]
        [Xunit.InlineDataAttribute("062", "62", new string[0])]
        [Xunit.InlineDataAttribute("063", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("064", "64", new string[0])]
        [Xunit.InlineDataAttribute("065", "Buzz", new string[0])]
        [Xunit.InlineDataAttribute("066", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("067", "67", new string[0])]
        [Xunit.InlineDataAttribute("068", "68", new string[0])]
        [Xunit.InlineDataAttribute("069", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("070", "Buzz", new string[0])]
        [Xunit.InlineDataAttribute("071", "71", new string[0])]
        [Xunit.InlineDataAttribute("072", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("073", "73", new string[0])]
        [Xunit.InlineDataAttribute("074", "74", new string[0])]
        [Xunit.InlineDataAttribute("075", "FizzBuzz", new string[0])]
        [Xunit.InlineDataAttribute("076", "76", new string[0])]
        [Xunit.InlineDataAttribute("077", "77", new string[0])]
        [Xunit.InlineDataAttribute("078", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("079", "79", new string[0])]
        [Xunit.InlineDataAttribute("080", "Buzz", new string[0])]
        [Xunit.InlineDataAttribute("081", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("082", "82", new string[0])]
        [Xunit.InlineDataAttribute("083", "83", new string[0])]
        [Xunit.InlineDataAttribute("084", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("085", "Buzz", new string[0])]
        [Xunit.InlineDataAttribute("086", "86", new string[0])]
        [Xunit.InlineDataAttribute("087", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("088", "88", new string[0])]
        [Xunit.InlineDataAttribute("089", "89", new string[0])]
        [Xunit.InlineDataAttribute("090", "FizzBuzz", new string[0])]
        [Xunit.InlineDataAttribute("091", "91", new string[0])]
        [Xunit.InlineDataAttribute("092", "92", new string[0])]
        [Xunit.InlineDataAttribute("093", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("094", "94", new string[0])]
        [Xunit.InlineDataAttribute("095", "Buzz", new string[0])]
        [Xunit.InlineDataAttribute("096", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("097", "97", new string[0])]
        [Xunit.InlineDataAttribute("098", "98", new string[0])]
        [Xunit.InlineDataAttribute("099", "Fizz", new string[0])]
        [Xunit.InlineDataAttribute("100", "Buzz", new string[0])]
        public void PrintFizzBuzz(string number, string expected, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "mytag"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("number", number);
            argumentsOfScenario.Add("Expected", expected);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Print FizzBuzz", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
 testRunner.Given(string.Format("the number is {0}", number), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
 testRunner.When("I print the result", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 10
 testRunner.Then(string.Format("{0} should be printed", expected), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                FizzBuzzFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                FizzBuzzFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
